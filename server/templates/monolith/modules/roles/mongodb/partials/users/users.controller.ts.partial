// <!-- USERS_CONTROLLER_IMPORTS -->
import { RolesGuard } from '../common/guards/roles.guard';
import { Roles } from '../common/decorators/roles.decorator';
import { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';
import { UpdateUserDto } from './dto/update-user.dto';
import { Types } from 'mongoose';
import { BadRequestException } from '@nestjs/common';

// <!-- USERS_CONTROLLER_METHODS -->
@Get()
@UseGuards(JwtAuthGuard, RolesGuard)
@Roles('admin')
findAll() {
    return this.usersService.findAll();
}

@Patch(':id')
@UseGuards(JwtAuthGuard, RolesGuard)
@Roles('admin')
update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {
    if (!Types.ObjectId.isValid(id)) {
        throw new BadRequestException('Invalid user ID');
    }

    return this.usersService.update(id, updateUserDto);
}